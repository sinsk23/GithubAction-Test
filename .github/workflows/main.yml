# Repository의 Actions 탭에 나타날 Workflow 이름으로 필수 옵션은 아닙니다.

name: CI

# Workflow를 실행시키기 위한 Event 목록입니다.
on:
  # 하단 코드에 따라 develop(main) 브랜치에 Push 또는 Pull Request 이벤트가 발생한 경우에 Workflow가 실행됩니다.
  # 만약 브랜치 구분 없이 이벤트를 지정하고 싶을 경우에는 단순히 아래와 같이 작성도 가능합니다.
  # on:[push,pull_request]  
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # 해당 옵션을 통해 사용자가 직접 Actions 탭에서 Workflow를 실행시킬 수 있습니다.
  # 여기에서는 추가적으로 더 설명하지는 않겠습니다.  
  workflow_dispatch:

# 해당 Workflow의 하나 이상의 Job 목록입니다.
# Jobs 단위로 개별 서버(정확히는 Docker 컨테이너 단위)에서 작업이 수행된다.
# 각 작업은 병렬로 실행 된다고 하는데, needs:build와 같이 표시해서 기다릴 수도 있다.
jobs:
  # 이 Workflow에는 "bulid"라는 단일 작업이 포함되어있습니다.
  # Job 이름으로,build라는 이름으로 Job이 표시됩니다.   
  build:
    # Runner가 실행되는 환경을 정의하는 부분 // 작업이 실행될 러너 유형 // Ubuntu, Windows, MacOs 지원
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x] # 템플릿 기본값: [10.x, 12.x, 14.x etc]
    # Step은 작업의 일부로 실행될 일련의 작업을 나타냅니다.//build Job내의 step목록 입니다.
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # uses 키워드를 통해 Action을 불러올 수 있습니다.
      # 여기에서는 해당 레포지토리로 check-out하여 레포지토리에 접근할 수 있는 Action을 불러왔습니다.
      # uses 개념은 다른 사람이 작성한 내용을 실행하는 개념이다.
      # actions/checkout : GitHub의 마지막 커밋으로 Checkout 한다.
      # actions/setup-node: Node.js를 설치한다.
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version}}
      # 러너 셸을 사용하여 단일 명령을 실행합니다.// 여기에서 실행되는 커맨드에 대한 설명으로, Workflow에 표시됩니다.
#       - name: Run a one-line script
#         run: echo Hello, world!
        # npm ci === npm install
      
      # 러너 셸을 사용하여 일련의 명령을 실행합니다.
      # 이렇게 하나의 커맨드가 아닌 여러 커맨드도 실행 가능합니다.       
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
